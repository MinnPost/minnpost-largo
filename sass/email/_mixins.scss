// @include breakpoint-max(lg) { ... }
//
// ...compiles to something like this:
//
// @media screen and (max-width: 50em) { ... }

@mixin breakpoint-max($bp:null) {
	$all-is-well: true;

	@if $bp {

		/*@if not map-has-key($breakpoints, $bp) {
			$all-is-well: false;

			@warn invalid("breakpoint-max",$bp) + wrong-type("valid breakpoint name",$bp) + ". " + $bp-min-lesson;
		}*/
	} @else {
		$all-is-well: false;

		@warn invalid("breakpoint-max") + missing(1) + $bp-min-lesson;
	}

	@if $all-is-well == true {

		@media screen and (max-width: $bp) {
			@content;
		}
	}
}


// text sizes
@mixin text-preset( $size: inherit, $line-height: inherit, $important: inherit ) {
	@if $size != "inherit" {
		@if $important != "inherit" {
			font-size: map-get( $font-sizes, $size ) !important;
		} @else {
			font-size: map-get( $font-sizes, $size );
		}
		//font-size: #{ $size };
		//line-height: var(--lh#{ $size });
		line-height: 1.3;
	}
}

// button treatment
@mixin button( $background: brand-color(red, medium), $hover: brand-color(red, dark), $color: neutral-color(white), $button-height: 122px) {
	border-collapse: collapse;
	border-spacing: 0;
	padding: 0;
	Margin: 0;
	color: $color;
	@include meta-preset( $size: 1, $bold: true, $italic: false, $line-height: 1 );
	mso-table-lspace: 0pt;
	mso-table-rspace: 0pt;

	> tbody > tr > td {
		height: $button-height;

		@media only screen and (max-width: $max-email-width) {
			height: inherit !important;
		}
	}

	td {
		border-collapse: collapse;
		Margin: 0;
		padding: 0;

		table {
			border-collapse: collapse;
			border-spacing: 0;
			color: $color;
			@include meta-preset( $size: 1, $bold: true, $italic: false, $line-height: 1 );
			Margin: 0;
			mso-table-lspace: 0pt;
			mso-table-rspace: 0pt;
			padding: 0;

			td {
				background: $background;
				border-collapse: collapse;
				border-radius: $border-radius;
				Margin: 0;
				padding: 0;

				a {
					cursor: pointer;
					border-radius: $border-radius;
					border: 0;
					color: $color;
					display: block;
					@include meta-preset( $size: 1, $bold: true, $italic: false, $line-height: 1 );
					padding: $standard-block-padding / 2;
					text-decoration: none;

					&:link,
					&:visited {
						background: $background;
						color: $color;
						text-decoration: none;
					}

					&:hover,
					&:focus,
					&:active,
					&.active {
						background: $hover !important;
						color: $color !important;
						text-decoration: none !important;
					}
				}
			}
		}
	}
}

// layout column
@mixin column( $max-width: inherit, $max-mobile-width: 90%, $margin-left: 0, $margin-right: 0) {
	width: 100%;
	display: inline-block;
	vertical-align: bottom;
	Margin-left: $margin-left;
	Margin-right: $margin-right;
	max-width: $max-width;

	table,
	td {
		width: 100%;
	}

	@media only screen and (max-width: $max-email-width) {
		max-width: $max-mobile-width !important;
		Margin-right: auto !important;
		Margin-left: auto !important;
	}
}
