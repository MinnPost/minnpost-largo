/*------------------------------------*\
	#Colors
\*------------------------------------*/

// brand colors
$brand-colors: (
	red: (
		dark: #4c1016,
		medium: #7f121c, // logo
		highlight: #d7757e
	),
);

// utility colors
$utility-colors: (
	green: (
		dark: #24613b,
		medium: #1c8745, // donate
		highlight: #609f78,
		background: #ddf8e7,
	),
	blue: (
		dark: #135b7e, // link
		medium: #0c7bb0,
		highlight: #5e99b5,
		background: #dcf0fa
	),
	purple: (
		dark: #635077, // opinion
		medium: #8c64b4,
		highlight: #a880d0,
		background: #ebe7ef
	),
);

// neutral colors
$neutral-colors: (
	black: #1a1818, // logo
	dark: #5e6e76,
	medium: #869298,
	border: #d6d6da,
	highlight: #ebebfb,
	white: #fff
);
$background-unpublished: neutral-color(white) url(/wp-content/themes/minnpost-largo/assets/img/unpublished.png);


/*------------------------------------*\
	#TYPOGRAPHY
\*------------------------------------*/

// font families
$font__code: monaco, consolas, "Andale Mono", "DejaVu Sans Mono", monospace;
$font__pre: "Courier 10 Pitch", courier, monospace;
$font__sans: helvetica, arial, sans-serif;
$font__serif: georgia, cambria, "Times New Roman", times, serif;
$webfont__serif: "ff-meta-serif-web-pro", georgia, cambria, "Times New Roman", times, serif;
$webfont__sans: "ff-meta-web-pro", helvetica, arial, sans-serif;

// type scale.
// uses Rob Weychert's code at https://24ways.org/2019/a-modern-typographic-scale/
$html-font-size: 100%;
// starts with the <html> element's font size value, so we
// should change that based on our media queries
:root {
	$font-size-interval: 1.125;    // Unitless for proportional, unit for fixed
	$body-text: 1em;  // Must have a unit
	$scale-min: -3;    // Unitless negative integer
	$scale-max: 4;     // Unitless positive integer

	--font-size-int: #{$font-size-interval};
	--scale0: #{$body-text};

	@if $scale-min < 0 {
		// Generate scale variables smaller than the base text size
		@for $i from -1 through $scale-min {

			@if type-of($font-size-interval) == number {

				@if unitless($font-size-interval) {
					--scale#{$i}: calc(var(--scale#{$i + 1}) / var(--font-size-int));
				} @else {
					--scale#{$i}: calc(var(--scale#{$i + 1}) - var(--font-size-int));
				}
			}
		}
	}

	@if $scale-max > 0 {
		// Generate scale variables larger than the base text size
		@for $i from 1 through $scale-max {

			@if type-of($font-size-interval) == number {

				@if unitless($font-size-interval) {
					--scale#{$i}: calc(var(--scale#{$i - 1}) * var(--font-size-int));
				} @else {
					--scale#{$i}: calc(var(--scale#{$i - 1}) + var(--font-size-int));
				}
			}
		}
	}
}

// line height scale
:root {
	$line-height-interval: 0.95;
	$body-line-height: 1.3;
	$line-height-scale-min: -3;    // Unitless negative integer
	$line-height-scale-max: 4;     // Unitless positive integer

	--line-height-int: #{$line-height-interval};
	--lh0: #{$body-line-height};

	@if $line-height-scale-min < 0 {
		// Generate scale variables smaller than the base text size
		@for $i from -1 through $line-height-scale-min {

			@if type-of($line-height-interval) == number {

				@if unitless($line-height-interval) {
					--lh#{$i}: calc(var(--lh#{$i + 1}) / var(--line-height-int));
				} @else {
					--lh#{$i}: calc(var(--lh#{$i + 1}) - var(--line-height-int));
				}
			}
		}
	}

	@if $line-height-scale-max > 0 {
		// Generate scale variables larger than the base text size
		@for $i from 1 through $line-height-scale-max {

			@if type-of($line-height-interval) == number {

				@if unitless($line-height-interval) {
					--lh#{$i}: calc(var(--lh#{$i - 1}) * var(--line-height-int));
				} @else {
					--lh#{$i}: calc(var(--lh#{$i - 1}) + var(--line-height-int));
				}
			}
		}
	}
}

/*------------------------------------*\
	#Layout
\*------------------------------------*/

// ------------------------------------------------------------
// GRID PROPORTIONS
// ------------------------------------------------------------
// Customize your gridâ€™s proportions by editing the values of
// the four variables below. Use only numbers for values, no
// units (e.g. "10", not "10px"). IMPORTANT: Don't delete any
// of these variables! For any you don't need to use, just
// assign a value of 0.

$mar: 4; // Margin width
$col: 4; // Column width
$gut: 1; // Gutter width
$pad: 1; // Padding width

$grid-color: red; // Grid overlay color

// ------------------------------------------------------------
// BREAKPOINTS
// ------------------------------------------------------------
// You can define as many (or as few) breakpoints as you like,
// and name them whatever you want. Just be sure to:
//
// 1. use the syntax shown below,
// 2. keep the breakpoints in order (smallest to largest), and
// 3. include a name (e.g. "xl"), column count ("cols",
//    unitless), and minimum width ("min-width", with units)
//    for each breakpoint
//
// All breakpoints use the same proportions specified in the
// variables above, but margin widths can be optionally
// customized for each breakpoint.

$breakpoints: (
	xxs: (cols:  4, min-width:  0,  margin: $pad), // Includes optional custom margin
	xs: (cols:  6, min-width: 30em, margin: $gut), // 480px
	sm: (cols:  6, min-width: 40em, margin: $gut), // 640px
	md: (cols:  8, min-width: 50em, margin: $gut), // 800px
	lg: (cols: 12, min-width: 60em, margin: $mar), // 960px
	xl: (cols: 16, min-width: 70em, margin: $mar), // 1120px
	xxl: (cols: 16, min-width: 80em, margin: $mar), // 1280px
    xxxl: (cols: 16, min-width: 90em, margin: $mar) // 1440px
);

$max-width: null; // For no max-width, use $max-width: null;

$size__site-sidebar: 300px; // this needs to be pixel based because of ad dimensions
$max-width-page: 80em; // this is 1280px
$max-width-popup: 92%;

// site structure
$max-width-medium: 680px;
$medium-margins-too-small: 700px;
$max-width-medium-plus-margins: 720px;
$max-width-story-2012: 452px;
$max-width-content: 75%; // trying this percentage out for now
$content-gutter: 5%;

$header-height-smaller-screen: 50px;
$header-height-small-screen: 76px;
$header-height-before-nav-breaks: 66px;
$header-height-after-nav-breaks: 71px;

// Neat Breakpoints
$small-screen: 480px; // replace with "sm"
$more-than-logo-screen: 500px;
$medium-screen: 865px; // added 225 for now
$nav-breaks: 768px; // maybe replace with md
$nav-move-end: 810px;
$large-screen: 860px;
$nav-wrap-screen: 950px; // replace with "lg" media query

// site region sizes
$size__main-smaller-screen: 50%;
$size__main-small-screen: 65%;
$size__main-large-screen: 400px;
$size__archive-medium-screen: 600px;
$size__ad-flexing: 660px;
$size__content-sidebar-small-screen: 280px;
$size__content-sidebar-medium-screen: 35%;
$size__content-sidebar-large-screen: 205px;

/*------------------------------------*\
	#SPACING
\*------------------------------------*/

// margin/padding
$standard-block-margin: 1.5em; // 36px at desktop
$standard-heading-margin: 0.75em; // 18px at desktop
$standard-block-padding: 0.5em; // 12px at body

$standard-page-margin: 1.538461538461538em; // 20px
$home-content-sidebar-padding: 35px;
$archive-content-sidebar-padding: 15px;
$form-text-indent: 6px;

/*------------------------------------*\
	#BORDERS
\*------------------------------------*/

$border-radius: 4px;
$border-default-style: 1px solid neutral-color(border);

/*------------------------------------*\
	#Animation
\*------------------------------------*/

$hover-transition: .25s all;

/*------------------------------------*\
	#Fixed Sizes
\*------------------------------------*/

// images
$author-photo-size: 190px;

// icons
$share-icon-size: 2em;
$inline-icon-size: 1em;

// ads
$ad-top-width: 728px;
$ad-top-height: 90px;
$ad-top-right-width: 228px;
$ad-top-right-iframe-height: 90px;
$ad-embed-width: 300px;
$ad-embed-height: 250px;
$ad-halfpage-width: 300px;
$ad-halfpage-height: 600px;
