/*!
This is an email-specific stylesheet. Using it with the Emogrifier library will cause the styles to be 
inlined into email templates based on the selectors. This way we can still use theme variables.
*/.clearfix:after{content:"";display:table;clear:both}html{font-family:sans-serif;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}input{line-height:normal}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}td,th{padding:0}*,:after,:before{box-sizing:inherit}html{box-sizing:border-box;margin:0;padding:0}body,html{color:#1a1818;background:#fff}body{margin:0 auto}main{position:relative;max-width:100%;flex:0 0 100%}hr{background-color:#d6d6da;border:0;height:1px;margin-bottom:1.5em}img{height:auto;max-width:100%}a svg{pointer-events:none}figure{margin:1.5em 0}label{display:inline-block}input:not([type=submit]),select,textarea{max-width:100%;line-height:normal;color:#1a1818;border-radius:4px;border:1px solid #d6d6da}[data-autoresize]{resize:none;box-sizing:border-box}.tlite{background:#1a1818;color:#fff;font-size:var(--scale-2);line-height:1.3;font-family:ff-meta-web-pro,helvetica,arial,sans-serif;font-size-adjust:.495;font-weight:400;font-style:normal;text-decoration:none;text-align:left;padding:.5em 1em;border-radius:4px;position:absolute;opacity:0;visibility:hidden;transition:opacity .4s;white-space:nowrap;box-shadow:0 .5rem 1rem -.5rem #000;z-index:1000;-webkit-backface-visibility:hidden;cursor:text}.tlite-table td,.tlite-table th{position:relative}.tlite-visible{visibility:visible;opacity:.9}.tlite:before{content:" ";display:block;background:inherit;width:10px;height:10px;position:absolute;transform:rotate(45deg)}.tlite-n:before{top:-3px;left:50%;margin-left:-5px}.tlite-nw:before{top:-3px;left:10px}.tlite-ne:before{top:-3px;right:10px}.tlite-s:before{bottom:-3px;left:50%;margin-left:-5px}.tlite-se:before{bottom:-3px;right:10px}.tlite-sw:before{bottom:-3px;left:10px}.tlite-w:before{left:-3px;top:50%;margin-top:-5px}.tlite-e:before{right:-3px;top:50%;margin-top:-5px}html{font-size:125%}body{font-size:var(--scale0);font-family:"ff-meta-serif-web-pro",georgia,cambria,Times New Roman,times,serif;font-size-adjust:.46;line-height:1.3}a{transition:all .25s}a,a:visited{color:#135b7e;text-decoration:underline;-webkit-text-decoration-color:#5e99b5;text-decoration-color:#5e99b5;text-underline-offset:.25em;text-decoration-thickness:.08em}a:active,a:focus,a:hover{color:#0c7bb0;text-decoration:underline;-webkit-text-decoration-color:#dcf0fa;text-decoration-color:#dcf0fa;text-underline-offset:.25em;text-decoration-thickness:.08em}a.active{color:#0c7bb0;text-decoration:underline;-webkit-text-decoration-color:#dcf0fa;text-decoration-color:#dcf0fa;text-underline-offset:.25em;text-decoration-thickness:.08em}.h1,.h2,.h3,.h4,.h5,.h6,h1,h2,h3,h4,h5,h6{margin:0;padding:0}.h2,.h3,.h4,.h5,.h6,h2,h3,h4,h5,h6{margin:0 0 .75em;padding:0}.h1,h1{font-size:var(--scale4);font-size-adjust:.46}.h1,.h2,h1,h2{line-height:1.3;font-family:"ff-meta-serif-web-pro",georgia,cambria,Times New Roman,times,serif;line-height:1.15}.h2,h2{font-size:var(--scale3);font-size-adjust:.46}.h3,h3{font-size:var(--scale2);font-size-adjust:.46}.h3,.h4,h3,h4{line-height:1.3;font-family:"ff-meta-serif-web-pro",georgia,cambria,Times New Roman,times,serif;line-height:1.15}.h4,h4{font-size:var(--scale1);font-size-adjust:.46}.h5,.h6,h5,h6{font-size:var(--scale0);line-height:1.3;font-family:"ff-meta-serif-web-pro",georgia,cambria,Times New Roman,times,serif;font-size-adjust:.46;line-height:1.15}.h6,h6{font-weight:500}body.single main h1+*~*{max-width:85ch}p{margin:0 0 1.5em;padding:0}p:last-child{margin-bottom:0}blockquote,q{quotes:"" ""}blockquote:after,blockquote:before,q:after,q:before{content:""}blockquote{font-size:var(--scale1);font-family:"ff-meta-serif-web-pro",georgia,cambria,Times New Roman,times,serif;font-size-adjust:.46;line-height:1.3;border-left:6px solid #1a1818;background:#efeff0;padding:1em;margin:0 0 1.5em}input,option,select,textarea{padding:.25em;font-size:var(--scale0);line-height:1.3;font-family:ff-meta-web-pro,helvetica,arial,sans-serif;font-size-adjust:.495;font-weight:400;font-style:normal}ol,ul{margin:0 0 1.5em 1em;padding:0}ol li,ul li{margin:0 0 .75em;padding:0 0 0 .25em}ol li:last-child,ul li:last-child{margin-bottom:0}ul{list-style:disc}ol{list-style:decimal}li>ol,li>ul{margin-bottom:0;margin-left:2em}dt{font-weight:700}dd{margin:0 1.5em 1.5em}.screen-reader-text{clip:rect(1px,1px,1px,1px);-webkit-clip-path:polygon(0 0,0 0,0 0,0 0);clip-path:polygon(0 0,0 0,0 0,0 0);position:absolute!important;white-space:nowrap;height:1px;width:1px;overflow:hidden}body{margin:0;padding:0;min-width:100%;background-color:#fff}img{line-height:100%;outline:none;text-decoration:none}center.wrapper{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;table-layout:fixed;width:100%}table{border-collapse:collapse;border-spacing:0;color:#1a1818;font-family:Helvetica,Arial,Geneva,sans-serif;margin:0 auto;max-width:600px;mso-table-lspace:0;mso-table-rspace:0;padding:0;width:100%;background-color:#fff}a:hover{color:#dcf0fa!important;text-decoration:none!important}a:active{color:#dcf0fa!important;text-decoration:none!important}a:visited{color:#135b7e!important}.content .button.read-story td td a:hover{color:#fff!important;text-decoration:none!important}.content .button.read-story td td a:visited{color:#fff!important;text-decoration:none!important}.content .button.read-story td td a:active{color:#fff!important;text-decoration:none!important}.footer a:hover{color:#801018!important;text-decoration:underline!important}.footer a:visited{color:#801018!important;text-decoration:none!important}.footer a:active{color:#801018!important;text-decoration:underline!important}@media screen and (min-width:70em){html{font-size:150%}}@media only screen and (max-width:600px){.content.story .ad{border-bottom:2px solid #cccccf!important;padding-bottom:18px!important;Margin-bottom:18px!important}.two-column.header .date,.two-column.header .date td{text-align:left!important}.two-column.header .logo td{border-bottom:10px solid #000!important;Margin-bottom:5px!important}div.story.story-last .story-inner{border-bottom:2px solid #cccccf!important;padding-bottom:18px!important;Margin-bottom:18px!important}.one-column .column,.two-column .column,.two-column .column.ad,.two-column .column.date,.two-column .column.logo,.two-column .column.more{max-width:90%!important;Margin-right:auto!important;Margin-left:auto!important}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
