'use strict';

(function ($) {

	function mp_analytics_tracking_event(type, category, action, label, value) {
		if (typeof ga !== 'undefined') {
			if (typeof value === 'undefined') {
				ga('send', type, category, action, label);
			} else {
				ga('send', type, category, action, label, value);
			}
		} else {
			return;
		}
	}

	function trackShare(text, position) {

		// if a not logged in user tries to email, don't count that as a share
		if (!$('body ').hasClass('logged-in') && 'Email' === text) {
			return;
		}

		// track as an event, and as social if it is twitter or fb
		mp_analytics_tracking_event('event', 'Share - ' + position, text, location.pathname);
		if ('undefined' !== typeof ga) {
			if ('Facebook' === text || 'Twitter' === text) {
				if (text == 'Facebook') {
					ga('send', 'social', text, 'Share', location.pathname);
				} else {
					ga('send', 'social', text, 'Tweet', location.pathname);
				}
			}
		} else {
			return;
		}
	}

	$('.m-entry-share-top a').click(function (e) {
		var text = $(this).text().trim();
		var position = 'top';
		trackShare(text, position);
	});

	$('.m-entry-share-bottom a').click(function (e) {
		var text = $(this).text().trim();
		var position = 'bottom';
		trackShare(text, position);
	});

	$('#navigation-featured a').click(function (e) {
		mp_analytics_tracking_event('event', 'Featured Bar Link', 'Click', this.href);
	});
	$('a.glean-sidebar').click(function (e) {
		mp_analytics_tracking_event('event', 'Sidebar Support Link', 'Click', this.href);
	});

	$('a', $('.o-site-sidebar')).click(function (e) {
		var widget_title = $(this).closest('.m-widget').find('h3').text();
		var sidebar_section_title = '';
		if (widget_title === '') {
			//sidebar_section_title = $(this).closest('.node-type-spill').find('.node-title a').text();
		} else {
			sidebar_section_title = widget_title;
		}
		mp_analytics_tracking_event('event', 'Sidebar Link', 'Click', sidebar_section_title);
	});

	$(document).ready(function (e) {

		if ('undefined' !== typeof PUM) {
			var current_popup = PUM.getPopup($('.pum'));
			var settings = PUM.getSettings($('.pum'));
			var popup_id = settings.id;
			$(document).on('pumAfterOpen', function () {
				mp_analytics_tracking_event('event', 'Popup', 'Show', popup_id, { 'nonInteraction': 1 });
			});
			$(document).on('pumAfterClose', function () {
				var close_trigger = $.fn.popmake.last_close_trigger;
				if ('undefined' !== typeof close_trigger) {
					mp_analytics_tracking_event('event', 'Popup', close_trigger, popup_id, { 'nonInteraction': 1 });
				}
			});
			$('.message-close').click(function (e) {
				// user clicks link with close class
				var close_trigger = 'Close Button';
				mp_analytics_tracking_event('event', 'Popup', close_trigger, popup_id, { 'nonInteraction': 1 });
			});
			$('.message-login').click(function (e) {
				// user clicks link with login class
				var url = $(this).attr('href');
				mp_analytics_tracking_event('event', 'Popup', 'Login Link', url);
			});
			$('.pum-content a:not( .message-close, .pum-close, .message-login )').click(function (e) {
				// user clicks something that is not close text or close icon
				mp_analytics_tracking_event('event', 'Popup', 'Click', popup_id);
			});
		}

		if ('undefined' !== typeof minnpost_membership_data && '' !== minnpost_membership_data.url_access_level) {
			var type = 'event';
			var category = 'Member Content';
			var label = location.pathname; // i think we could possibly put some grouping here, but we don't necessarily have access to one and maybe it's not worthwhile yet
			var action = 'Blocked';
			if (true === minnpost_membership_data.current_user.can_access) {
				action = 'Shown';
			}
			mp_analytics_tracking_event(type, category, action, label);
		}
	});
})(jQuery);
'use strict';

jQuery(document).ready(function ($) {
	"use strict";

	if ($('.m-form-newsletter-shortcode').length > 0) {
		$('.m-form-newsletter-shortcode fieldset').before('<div class="m-hold-message"></div>');
		$('.m-form-newsletter-shortcode form').submit(function (event) {
			var that = this;
			event.preventDefault(); // Prevent the default form submit.
			var button = $('button', this);
			button.prop('disabled', true);
			button.text('Processing');
			// serialize the form data
			var ajax_form_data = $(this).serialize();
			//add our own ajax check as X-Requested-With is not always reliable
			ajax_form_data = ajax_form_data + '&ajaxrequest=true&subscribe';
			$.ajax({
				url: params.ajaxurl, // domain/wp-admin/admin-ajax.php
				type: 'post',
				dataType: 'json',
				data: ajax_form_data
			}).done(function (response) {
				// response from the PHP action
				var message = '';
				if (response.success === true) {
					$('fieldset', that).hide();
					button.text('Thanks');
					var analytics_action = 'Signup';
					switch (response.data.user_status) {
						case 'existing':
							analytics_action = 'Update';
							message = 'Thanks for updating your email preferences. They will go into effect immediately.';
							break;
						case 'new':
							analytics_action = 'Signup';
							message = 'We have added you to the MinnPost mailing list.';
							break;
						case 'pending':
							analytics_action = 'Signup';
							message = 'We have added you to the MinnPost mailing list. You will need to click the confirmation link in the email we sent to begin receiving messages.';
							break;
					}
					if ('function' === typeof mp_analytics_tracking_event) {
						mp_analytics_tracking_event('event', 'Newsletter', analytics_action, location.pathname);
					}
				} else {
					button.prop('disabled', false);
					button.text('Subscribe');
					if ('function' === typeof mp_analytics_tracking_event) {
						mp_analytics_tracking_event('event', 'Newsletter', 'Fail', location.pathname);
					}
				}
				$('.m-hold-message').html('<div class="m-form-message m-form-message-info">' + message + '</div>');
			}).fail(function (response) {
				$('.m-hold-message').html('<div class="m-form-message m-form-message-info">An error has occured. Please try again.</div>');
				button.prop('disabled', false);
				button.text('Subscribe');
				if ('function' === typeof mp_analytics_tracking_event) {
					mp_analytics_tracking_event('event', 'Newsletter', 'Fail', location.pathname);
				}
			}).always(function () {
				event.target.reset();
			});
		});
	}
});
'use strict';

/**
 * File navigation.js.
 *
 * Handles toggling the navigation menu for small screens and enables TAB key
 * navigation support for dropdown menus.
 */
(function () {
	var container, button, menu, links, i, len;

	container = document.getElementById('navigation-primary');
	if (!container) {
		return;
	}

	button = container.getElementsByTagName('button')[0];
	if ('undefined' === typeof button) {
		return;
	}

	menu = container.getElementsByTagName('ul')[0];

	// Hide menu toggle button if menu is empty and return early.
	if ('undefined' === typeof menu) {
		button.style.display = 'none';
		return;
	}

	menu.setAttribute('aria-expanded', 'false');
	if (-1 === menu.className.indexOf('menu')) {
		menu.className += ' menu';
	}

	button.onclick = function () {
		if (-1 !== container.className.indexOf('toggled')) {
			container.className = container.className.replace(' toggled', '');
			button.setAttribute('aria-expanded', 'false');
			menu.setAttribute('aria-expanded', 'false');
		} else {
			container.className += ' toggled';
			button.setAttribute('aria-expanded', 'true');
			menu.setAttribute('aria-expanded', 'true');
		}
	};

	// Get all the link elements within the menu.
	links = menu.getElementsByTagName('a');

	// Each time a menu link is focused or blurred, toggle focus.
	for (i = 0, len = links.length; i < len; i++) {
		links[i].addEventListener('focus', toggleFocus, true);
		links[i].addEventListener('blur', toggleFocus, true);
	}

	/**
  * Sets or removes .focus class on an element.
  */
	function toggleFocus() {
		var self = this;

		// Move up through the ancestors of the current link until we hit .nav-menu.
		while (-1 === self.className.indexOf('menu')) {

			// On li elements toggle the class .focus.
			if ('li' === self.tagName.toLowerCase()) {
				if (-1 !== self.className.indexOf('focus')) {
					self.className = self.className.replace(' focus', '');
				} else {
					self.className += ' focus';
				}
			}

			self = self.parentElement;
		}
	}

	/**
  * Toggles `focus` class to allow submenu access on tablets.
  */
	(function (container) {
		var touchStartFn,
		    i,
		    parentLink = container.querySelectorAll('.menu-item-has-children > a, .page_item_has_children > a');

		if ('ontouchstart' in window) {
			touchStartFn = function touchStartFn(e) {
				var menuItem = this.parentNode,
				    i;

				if (!menuItem.classList.contains('focus')) {
					e.preventDefault();
					for (i = 0; i < menuItem.parentNode.children.length; ++i) {
						if (menuItem === menuItem.parentNode.children[i]) {
							continue;
						}
						menuItem.parentNode.children[i].classList.remove('focus');
					}
					menuItem.classList.add('focus');
				} else {
					menuItem.classList.remove('focus');
				}
			};

			for (i = 0; i < parentLink.length; ++i) {
				parentLink[i].addEventListener('touchstart', touchStartFn, false);
			}
		}
	})(container);
})();

// user account navigation can be a dropdown
jQuery(document).ready(function ($) {
	// hide menu
	if ($('#user-account-access ul').length > 0) {
		$('#user-account-access > li > a').on('click', function (event) {
			$('#user-account-access ul').toggleClass('visible');
			event.preventDefault();
		});
	}
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
